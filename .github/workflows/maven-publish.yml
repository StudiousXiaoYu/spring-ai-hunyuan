name: Maven Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      example-input:
        description: 'An example input'
        required: true
        default: 'default value'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Setup GPG Configuration
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "use-agent" > ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

      - name: Import GPG key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          # 获取密钥ID (最后8位字符)
          KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | awk '/sec/{split($2,a,"/"); print a[2]}' | tail -c 9)
          echo "Imported key ID: $KEY_ID"
          # 保存密钥ID到环境变量
          echo "KEY_ID=$KEY_ID" >> $GITHUB_ENV
          # 预加载密码到gpg-agent
          echo "$GPG_PASSPHRASE" | gpg --batch --pinentry-mode loopback --passphrase-fd 0 --export-secret-keys > /dev/null
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build and Publish
        run: |
          # 使用密钥ID执行签名
          mvn -B package deploy \
            -s $GITHUB_WORKSPACE/settings.xml \
            -Dgpg.keyname=$KEY_ID \
            -Dgpg.passphrase=$GPG_PASSPHRASE
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
          MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
